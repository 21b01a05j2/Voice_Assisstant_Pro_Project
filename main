import speech_recognition as sr
import pyttsx3
import pywhatkit
import datetime
import wikipedia
import pyjokes
import requests
import webbrowser
import random
import os
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
import csv
import pyautogui



listener = sr.Recognizer()
engine = pyttsx3.init()
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)
driver = None

def speak(text):
    engine.say(text)
    engine.runAndWait()

def listen():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)

    try:
        command = recognizer.recognize_google(audio).lower()
        print("You said:", command)
        return command
    except sr.UnknownValueError:
        print("Could not understand audio.")
        return ""
    except sr.RequestError as e:
        print(f"Could not request results from Google Speech Recognition service; {e}")
        return ""

def open_compiler():
    global driver
    url = "https://www.programiz.com/python-programming/online-compiler/"
    driver = webdriver.Chrome()  # Make sure you have Chromedriver installed
    driver.get(url)
    speak("Opening the online Python compiler.")
    time.sleep(5)  # Allow time for the compiler to fully load, you can adjust this time

    if driver is not None:
        try:
            speak("The online Python compiler is now open.")
        except Exception as e:
            print(f"Error: {e}")
            speak("An error occurred while opening the compiler.")
            driver.quit()  # Close the browser window
            driver = None

def write_hello_world(code_editor):
    try:
        speak("Writing 'Hello, world!' in the code editor.")
        code_editor.send_keys("print(\"Hello, world!\")")
        time.sleep(1)  # Wait for a moment
    except Exception as e:
        print(f"Error: {e}")
        speak("An error occurred while writing the code.")

def run_program(code_editor):
    try:
        speak("Running the program.")
        code_editor.send_keys(Keys.CONTROL, Keys.RETURN)  # Use CONTROL + Enter to run the code
        speak("Code printed: print(\"Hello, world!\")")
    except Exception as e:
        print(f"Error: {e}")
        speak("An error occurred while running the code.")

def perform_compiler_actions():
    global driver
    open_compiler()
    if driver is not None:
        try:
            # Find the code editor element and send keys to input the desired code
            code_editor = driver.find_element("class name", "ace_text-input")
            write_hello_world(code_editor)
            run_program(code_editor)
        except Exception as e:
            print(f"Error: {e}")
            speak("An error occurred while executing the code.")
        finally:
            driver.quit()  # Close the browser window
            driver = None
    else:
        speak("The online Python compiler is not open.")
def load_contacts(csv_path):
    contacts = {}
    with open(csv_path, newline='') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            contacts[row['Name'].lower()] = row['Phone']
    return contacts

def run_leo():
    contacts = load_contacts(r'C:\Users\SAI PAVAN\Desktop\contacts.csv') 
    command = listen()
    print(command)
    if 'play' in command:
        song = command.replace('play', '')
        speak('playing' + song)
        pywhatkit.playonyt(song)
    elif 'time' in command:
        time_now = datetime.datetime.now().strftime('%I:%M %p')
        speak('Current time is ' + time_now)
        print('Current time is ' + time_now)
    elif 'tell me about' in command:
        person = command.replace('tell me about', '')
        info = wikipedia.summary(person, 2)
        print(info)
        speak(info)
    elif 'joke' in command:
        speak(pyjokes.get_joke())
        print(pyjokes.get_joke())
    elif 'weather' in command:
        city = command.replace('weather in', '')
        weather_info = get_weather(city)
        print(weather_info)
        speak(weather_info)
    elif 'open website' in command:
        website = command.replace('open website', '')
        url = f'https://www.google.com'
        webbrowser.open(url)
        speak(f'Opening Google website')
    elif 'search' in command:
        search_query = command.replace('search', '')
        pywhatkit.search(search_query)
        speak(f'Searching for {search_query} on Google')
    elif 'send message to' in command:
        contact_name = command.replace('send message to', '').strip()
        if contact_name.lower() in contacts:
            contact_number = contacts[contact_name.lower()]
            message = 'Hello, how are you?'  # You can change the message as needed
            try:
                pywhatkit.sendwhatmsg(contact_number, message, datetime.datetime.now().hour,
                                      datetime.datetime.now().minute, wait_time=1)  # Set wait_time to 1 second
                # Automatically send the message after typing
                time.sleep(1)  # Wait for 1 second before sending to ensure the message is typed
                pyautogui.press('enter')  # Simulate pressing the Enter key to send the message
                speak(f'Sending a WhatsApp message to {contact_name}')
            except Exception as e:
                print("Error sending message:", str(e))
                speak("Sorry, I encountered an error while sending the message.")

        else:
            speak(f"Sorry, I couldn't find {contact_name} in your contacts.")
    elif 'date' in command:
        date_now = datetime.datetime.now().strftime('%Y-%m-%d')
        print(date_now)
        speak(f'Today is {date_now}')
    elif 'compliment me' in command:
        compliment = generate_compliment()
        speak(compliment)
        print(compliment)
    elif 'latest news' in command:
        news_headlines = get_news()
        for headline in news_headlines:
            speak(headline)
            print(headline)
    elif 'shutdown' in command:
        speak('Shutting down the computer.')
        os.system('shutdown /s /t 5')  # /s for shutdown, /t for time delay (5 seconds in this case)
    elif 'restart' in command:
        speak('Restarting the computer.')
        os.system('shutdown /r /t 5')  # /r for restart, /t for time delay (5 seconds in this case)
    elif 'log off' in command:
        speak('Logging off the computer.')
        os.system('shutdown /l')  # /l for log off
    elif 'start game' in command:
        trivia_game()
    elif 'quote of the day' in command:
        quote = get_quote_of_the_day()
        speak(quote)
        print(quote)
    elif 'your name' in command:
        speak("I'm your virtual assistant LEO!")
        print("I'm your virtual assistant LEO!")
    elif 'open online compiler' in command:
        open_compiler()
    elif 'write hello world program' in command:
        if driver is not None:
            code_editor = driver.find_element("class name", "ace_text-input")
            write_hello_world(code_editor)
        else:
            speak("The online Python compiler is not open.")
    elif 'run program' in command:
        if driver is not None:
            code_editor = driver.find_element("class name", "ace_text-input")
            run_program(code_editor)
        else:
            speak("The online Python compiler is not open.")
    else:
        speak('Please say the command again')

def get_weather(city):
    base_url = f'https://api.open-meteo.com/weather?forecast=hourly&daily=7&timezone=Europe%2FBerlin&current_weather=yes&longitude=&latitude=&hourly=temperature_2m'

    try:
        params = {'city': city}
        weather_data = requests.get(base_url, params=params).json()
        current_temperature = weather_data['current_weather']['temperature_2m']
        return f'The current temperature in {city} is {current_temperature}Â°C.'
    except KeyError:
        return 'Sorry, I couldn\'t retrieve the weather information.'

def generate_compliment():
    compliments = [
        "You're doing great!",
        "You have a wonderful smile!",
        "You're incredibly smart!",
        "Your positive attitude is contagious!",
        "You're one of a kind!"
    ]
    return random.choice(compliments)

def get_news():
    news_api_key = '5945632ecd7c4e928633891c85dc18e1'
    url = f'https://newsapi.org/v2/top-headlines?country=us&apiKey={news_api_key}'
    response = requests.get(url)
    news_data = response.json()
    headlines = [article['title'] for article in news_data['articles']]
    return headlines

def trivia_game():
    speak("Welcome to the Trivia Game! I will ask you three trivia questions. Let's see how many you can answer correctly.")
    print("Welcome to the Trivia Game! I will ask you three trivia questions. Let's see how many you can answer correctly.")
    questions = [
        {"question": "What is the capital of France?", "answer": "Paris"},
        {"question": "Which planet is known as the Red Planet?", "answer": "Mars"},
        {"question": "Who wrote Romeo and Juliet?", "answer": "William Shakespeare"},
    ]

    score = 0

    for question_data in questions:
        speak(question_data["question"])
        user_answer = listen().lower()

        if user_answer == question_data["answer"].lower():
            speak("Correct! Well done.")
            print("Correct! Well done.")
            score += 1
        else:
            speak(f"Wrong! The correct answer is {question_data['answer']}.")
            print(f"Wrong! The correct answer is {question_data['answer']}.")

    speak(f"Game over. Your final score is {score} out of {len(questions)}.")
    print(f"Game over. Your final score is {score} out of {len(questions)}.")

def get_quote_of_the_day():
    quotes = [
        "The only way to do great work is to love what you do. - Steve Jobs",
        "Success is not final, failure is not fatal: It is the courage to continue that counts. - Winston Churchill",
        "Believe you can and you're halfway there. - Theodore Roosevelt",
    ]
    return random.choice(quotes)

def main():
    speak("Hello! How can I assist you today?")

    while True:
        run_leo()

if __name__ == "__main__":
    main()

